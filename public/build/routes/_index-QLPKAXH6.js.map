{
  "version": 3,
  "sources": ["browser-route-module:routes/_index.tsx?browser", "../../../app/routes/_index.tsx", "../../../app/components/Records.tsx"],
  "sourcesContent": ["export { default, links, meta } from \"./routes/_index.tsx\";", "import type {\nLinksFunction,\nLoaderArgs,\nSerializeFrom,\nV2_MetaFunction } from\n'@remix-run/node';\nimport { json } from '@remix-run/node';\nimport type { RouteMatch } from '@remix-run/react';\nimport { useLoaderData } from '@remix-run/react';\nimport groq from 'groq';\n\nimport { PreviewWrapper } from '~/components/PreviewWrapper';\nimport { Records } from '~/components/Records';\nimport { Title } from '~/components/Title';\nimport { deduplicateDrafts } from '~/lib/deduplicateDrafts';\nimport { getPreviewToken } from '~/lib/getPreviewToken';\nimport { useRootLoaderData } from '~/lib/useRootLoaderData';\nimport type { loader as rootLoader } from '~/root';\nimport { getClient } from '~/sanity/client';\nimport tailwind from '~/tailwind.css';\nimport { recordStubsZ } from '~/types/record';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: tailwind }];\n};\n\nexport const meta: V2_MetaFunction = ({ matches }) => {\n  const rootData = (matches.find((match: RouteMatch) => match.id === `root`) as\n  {data: SerializeFrom<typeof rootLoader>;} |\n  undefined);\n\n  const home = rootData ? rootData.data.home : null;\n  const title = [home?.title, home?.siteTitle].filter(Boolean).join(' | ');\n\n  return [{ title }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const { preview } = await getPreviewToken(request);\n  const query = groq`*[_type == \"record\"][0...12]|order(title asc){\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current,\n    \"artist\": artist->title,\n    image\n  }`;\n\n  const records = await getClient(preview).\n  fetch(query).\n  then((res) => res ? recordStubsZ.parse(res) : null);\n\n  const recordsDeduped =\n  records?.length && preview ?\n  recordStubsZ.parse(deduplicateDrafts(records)) :\n  records;\n\n  if (!records) {\n    throw new Response('Not found', { status: 404 });\n  }\n\n  return json({\n    records: recordsDeduped,\n    query: preview ? query : null,\n    params: preview ? {} : null\n  });\n};\n\nexport default function Index() {\n  const { records = [], query, params } = useLoaderData<typeof loader>();\n  const { home, query: homeQuery, params: homeParams } = useRootLoaderData();\n\n  return (\n    <div className=\"grid grid-cols-1 gap-6 md:gap-12\">\n      <PreviewWrapper\n      data={home}\n      render={(data) => data?.title ? <Title>{data.title}</Title> : null}\n      query={homeQuery}\n      params={homeParams} />\n\n      <PreviewWrapper\n      data={records}\n      render={(data) => <Records records={data ?? []} />}\n      query={query}\n      params={params} />\n\n    </div>);\n\n}", "/* eslint-disable prettier/prettier */\nimport { Link } from '@remix-run/react'\nimport React, { useState } from 'react'\n\nimport { RecordCover } from '~/components/RecordCover'\nimport type { RecordStub } from '~/types/record'\n\ntype RecordsProps = {\n  records: RecordStub[]\n}\n\nexport function Records(props: RecordsProps) {\n  const [search, setSearch] = useState(\"\");\n  const { records = [] } = props\n\n  console.log(setSearch);\n\n\n\n  return records.length > 0 ? (\n    <ul className=\"grid grid-cols-1 gap-6 md:grid-cols-2 md:gap-12 lg:grid-cols-3\">\n\n      {records.filter((val) => {\n\n        if (setSearch == \"\") {\n          return val;\n        } else if (val.title?.toLowerCase().includes(search)) {\n          return val;\n        }\n      })\n\n\n        .map((record) => (\n          <li key={record._id} className=\"group relative flex flex-col\">\n            <div className=\"relative overflow-hidden transition-all duration-200 ease-in-out group-hover:scale-105 group-hover:opacity-90\">\n              <div className=\"absolute z-0 h-48 w-[200%] translate-x-20 translate-y-20 -rotate-45 dark:bg-gradient-to-b from-black to-transparent opacity-25 mix-blend-overlay transition-transform duration-500 ease-in-out group-hover:translate-x-10 group-hover:translate-y-10 group-hover:opacity-75\" />\n              <RecordCover image={record.image} title={record.title} />\n            </div>\n            <div className=\"flex flex-col\">\n              {record?.slug ? (\n                <Link\n                  prefetch=\"intent\"\n                  to={record?.slug}\n                  className=\"text-base\"\n                >\n\n                  {/* Makes this entire block clickable */}\n                  <span className=\"absolute inset-0\" />\n                </Link>\n              ) : (\n                <span className=\"pt-4 text-2xl font-bold tracking-tighter\">\n                  {record.title}\n                </span>\n              )}\n              {record?.artist ? (\n                <span className=\"bg-black font-bold leading-none tracking-tighter text-white\">\n                  {record.artist}\n                </span>\n              ) : null}\n            </div>\n          </li>\n        ))}\n    </ul>\n  ) : (\n    <div className=\"prose prose-xl mx-auto bg-green-50 p-4\">\n      <p>No records found, yet!</p>\n      <p>\n        <a href=\"/studio\">Log in to your Sanity Studio</a> and start creating\n        content!\n      </p>\n    </div>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAAA,gBAAgC;AAiClB;AAxBP,SAAS,QAAQ,OAAqB;AAC3C,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,EAAE;AACvC,QAAM,EAAE,UAAU,CAAC,EAAE,IAAI;AAEzB,UAAQ,IAAI,SAAS;AAIrB,SAAO,QAAQ,SAAS,IACtB,mDAAC,QAAG,WAAU,kEAEX,kBAAQ,OAAO,CAAC,QAAQ;AAtB/B;AAwBQ,QAAI,aAAa,IAAI;AACnB,aAAO;AAAA,IACT,YAAW,SAAI,UAAJ,mBAAW,cAAc,SAAS,SAAS;AACpD,aAAO;AAAA,IACT;AAAA,EACF,CAAC,EAGE,IAAI,CAAC,WACJ,mDAAC,QAAoB,WAAU,gCAC7B;AAAA,uDAAC,SAAI,WAAU,iHACb;AAAA,yDAAC,SAAI,WAAU,iRAAf;AAAA;AAAA;AAAA;AAAA,aAA6R;AAAA,MAC7R,mDAAC,eAAY,OAAO,OAAO,OAAO,OAAO,OAAO,SAAhD;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,SAFzD;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,SAAI,WAAU,iBACZ;AAAA,wCAAQ,QACP;AAAA,QAAC;AAAA;AAAA,UACC,UAAS;AAAA,UACT,IAAI,iCAAQ;AAAA,UACZ,WAAU;AAAA,UAIV,6DAAC,UAAK,WAAU,sBAAhB;AAAA;AAAA;AAAA;AAAA,iBAAmC;AAAA;AAAA,QAPrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,IAEA,mDAAC,UAAK,WAAU,4CACb,iBAAO,SADV;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,OAED,iCAAQ,UACP,mDAAC,UAAK,WAAU,+DACb,iBAAO,UADV;AAAA;AAAA;AAAA;AAAA,aAEA,IACE;AAAA,SApBN;AAAA;AAAA;AAAA;AAAA,WAqBA;AAAA,OA1BO,OAAO,KAAhB;AAAA;AAAA;AAAA;AAAA,SA2BA,CACD,KAzCL;AAAA;AAAA;AAAA;AAAA,SA0CA,IAEA,mDAAC,SAAI,WAAU,0CACb;AAAA,uDAAC,OAAE,sCAAH;AAAA;AAAA;AAAA;AAAA,WAAyB;AAAA,IACzB,mDAAC,OACC;AAAA,yDAAC,OAAE,MAAK,WAAU,4CAAlB;AAAA;AAAA;AAAA;AAAA,aAA8C;AAAA,MAAI;AAAA,SADpD;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ;;;;;;ADIsC,IAAAC,0BAAA;AAtD/B,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,iBAAS,CAAC;AAC/C;AAEO,IAAM,OAAwB,CAAC,EAAE,QAAQ,MAAM;AACpD,QAAM,WAAY,QAAQ,KAAK,CAAC,UAAsB,MAAM,OAAO,MAAM;AAIzE,QAAM,OAAO,WAAW,SAAS,KAAK,OAAO;AAC7C,QAAM,QAAQ,CAAC,6BAAM,OAAO,6BAAM,SAAS,EAAE,OAAO,OAAO,EAAE,KAAK,KAAK;AAEvE,SAAO,CAAC,EAAE,MAAM,CAAC;AACnB;AAiCe,SAAR,QAAyB;AAC9B,QAAM,EAAE,UAAU,CAAC,GAAG,OAAO,OAAO,IAAI,cAA6B;AACrE,QAAM,EAAE,MAAM,OAAO,WAAW,QAAQ,WAAW,IAAI,kBAAkB;AAEzE,SACE,oDAAC,SAAI,WAAU,oCACb;AAAA;AAAA,MAAC;AAAA;AAAA,QACD,MAAM;AAAA,QACN,QAAQ,CAAC,UAAS,6BAAM,SAAQ,oDAAC,SAAO,eAAK,SAAb;AAAA;AAAA;AAAA;AAAA,eAAmB,IAAW;AAAA,QAC9D,OAAO;AAAA,QACP,QAAQ;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIoB;AAAA,IAEpB;AAAA,MAAC;AAAA;AAAA,QACD,MAAM;AAAA,QACN,QAAQ,CAAC,SAAS,oDAAC,WAAQ,SAAS,sBAAQ,CAAC,KAA3B;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,QAChD;AAAA,QACA;AAAA;AAAA,MAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIgB;AAAA,OAXlB;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ;",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
