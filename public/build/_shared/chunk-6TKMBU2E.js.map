{
  "version": 3,
  "sources": ["../../../node_modules/groq/src/groq.ts"],
  "sourcesContent": ["/**\n * Pass-through groq template tag. This is a no-op, but it helps editor integrations\n * understand that a string represents a GROQ query in order to provide syntax highlighting\n * and other features.\n *\n * @param strings - Template string parts\n * @param keys - Template string keys\n * @returns The same string as the input\n * @public\n */\nexport default function groq(strings: TemplateStringsArray, ...keys: any[]): string {\n  const lastIndex = strings.length - 1\n  return (\n    strings.slice(0, lastIndex).reduce((acc, str, i) => {\n      return acc + str + keys[i]\n    }, '') + strings[lastIndex]\n  )\n}\n"],
  "mappings": ";;;;;;;;;AAUwB;;;;;SAAAA,KAAKC,SAAuD;AAAA,WAAAC,OAAAC,UAAAC,QAArBC,OAAqB,IAAAC,MAAAJ,OAAA,IAAAA,OAAA,IAAA,CAAA,GAAAK,OAAA,GAAAA,OAAAL,MAAAK,QAAA;AAArBF,SAAqBE,OAAA,CAAA,IAAAJ,UAAAI,IAAA;EAAA;AAC5E,QAAAC,YAAYP,QAAQG,SAAS;AAEjC,SAAAH,QAAQQ,MAAM,GAAGD,SAAS,EAAEE,OAAO,CAACC,KAAKC,KAAKC,MAAM;AAC3C,WAAAF,MAAMC,MAAMP,KAAKQ,CAAC;EACxB,GAAA,EAAE,IAAIZ,QAAQO,SAAS;AAE9B;",
  "names": ["groq", "strings", "_len", "arguments", "length", "keys", "Array", "_key", "lastIndex", "slice", "reduce", "acc", "str", "i"]
}
