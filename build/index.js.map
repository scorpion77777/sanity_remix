{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/ExitPreview.tsx", "../app/components/Logo.tsx", "../app/components/PreviewWrapper.tsx", "../app/components/Loading.tsx", "../app/lib/useRootLoaderData.ts", "../app/sanity/projectDetails.ts", "../app/components/Footer.tsx", "../app/components/ThemeToggle.tsx", "../app/components/Header.tsx", "../app/cookies.ts", "../app/lib/getBodyClassNames.ts", "../app/sessions.ts", "../app/lib/getPreviewToken.ts", "../app/sanity/client.ts", "../app/types/home.ts", "../app/routes/resource.toggle-theme.ts", "../app/routes/resource.preview.ts", "../app/sanity/structure/getSecret.ts", "../app/routes/resource.og.tsx", "../app/lib/og.server.tsx", "../app/routes/studio.$.tsx", "../sanity.config.ts", "../app/sanity/schema/artist.ts", "../app/sanity/schema/genre.ts", "../app/sanity/schema/home.ts", "../app/sanity/schema/record.ts", "../app/sanity/schema/track.ts", "../app/lib/secondsToMinutes.ts", "../app/sanity/components/Duration.tsx", "../app/sanity/schema/index.ts", "../app/sanity/structure/index.ts", "../app/sanity/components/OGPreview.tsx", "../app/sanity/structure/resolvePreviewUrl.ts", "../app/sanity/structure/resolveOGUrl.ts", "../app/routes/_index.tsx", "../app/components/Records.tsx", "../app/components/RecordCover.tsx", "../app/components/Title.tsx", "../app/lib/deduplicateDrafts.ts", "../app/types/record.ts", "../app/routes/$slug.tsx", "../app/components/LikeDislike.tsx", "../app/components/SanityContent.tsx", "../app/components/SanityImage.tsx", "../app/components/Record.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type {EntryContext} from '@remix-run/node'\nimport {Response} from '@remix-run/node'\nimport {RemixServer} from '@remix-run/react'\nimport {renderToPipeableStream, renderToString} from 'react-dom/server'\nimport {PassThrough} from 'stream'\nimport {ServerStyleSheet} from 'styled-components'\n\nconst ABORT_DELAY = 5000\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false\n    let isStudioRoute = new URL(request.url).pathname.startsWith(`/studio`)\n\n    // We're only using Styled Components in the /studio route\n    // Couldn't find any docs on renderToPipeableStream + Styled Components\n    if (isStudioRoute) {\n      const sheet = new ServerStyleSheet()\n      let markup = renderToString(\n        sheet.collectStyles(\n          <RemixServer context={remixContext} url={request.url} />\n        )\n      )\n      const styles = sheet.getStyleTags()\n      markup = markup.replace('__STYLES__', styles)\n\n      responseHeaders.set('Content-Type', 'text/html')\n\n      return resolve(\n        new Response('<!DOCTYPE html>' + markup, {\n          status: responseStatusCode,\n          headers: responseHeaders,\n        })\n      )\n    }\n\n    const {pipe, abort} = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onShellReady: () => {\n          const body = new PassThrough()\n\n          responseHeaders.set('Content-Type', 'text/html')\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          )\n\n          pipe(body)\n        },\n        onShellError: (err) => {\n          reject(err)\n        },\n        onError: (error) => {\n          didError = true\n\n          console.error(error)\n        },\n      }\n    )\n\n    setTimeout(abort, ABORT_DELAY)\n  })\n}\n", "import type { LinksFunction, LoaderArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  useLocation,\n} from '@remix-run/react'\nimport groq from 'groq'\nimport { z } from 'zod'\n\nimport { ExitPreview } from '~/components/ExitPreview'\nimport { Footer } from '~/components/Footer'\nimport { Header } from '~/components/Header'\nimport { themePreferenceCookie } from '~/cookies'\nimport { getBodyClassNames } from '~/lib/getBodyClassNames'\nimport { getPreviewToken } from '~/lib/getPreviewToken'\nimport { getClient } from '~/sanity/client'\nimport { homeZ } from '~/types/home'\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: 'preconnect', href: 'https://cdn.sanity.io' },\n    {\n      rel: 'preconnect',\n      href: 'https://fonts.gstatic.com',\n      crossOrigin: 'anonymous',\n    },\n    {\n      rel: 'preconnect',\n      href: 'https://fonts.googleapis.com',\n      crossOrigin: 'anonymous',\n    },\n    {\n      href: 'https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@500;700&family=Inter:wght@500;700;800&family=PT+Serif:ital,wght@0,400;0,700;1,400;1,700&display=swap',\n      rel: 'stylesheet',\n    },\n  ]\n}\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const { token, preview } = await getPreviewToken(request)\n\n  // Dark/light mode\n  const cookieHeader = request.headers.get('Cookie')\n  const cookie = (await themePreferenceCookie.parse(cookieHeader)) || {}\n  const themePreference = z\n    .union([z.literal('dark'), z.literal('light')])\n    .optional()\n    .parse(cookie.themePreference)\n\n  // Sanity content throughout the site\n  const query = groq`*[_id == \"home\"][0]{\n    title,\n    siteTitle,\n    subTitle,\n  }`\n  const home = await getClient(preview)\n    .fetch(query)\n    .then((res) => (res ? homeZ.parse(res) : null))\n\n  return json({\n    home,\n    preview,\n    query: preview ? query : token,\n    params: preview ? {} : null,\n    // Note: This makes the token available to the client if they have an active session\n    // This is useful to show live preview to unauthenticated users\n    // If you would rather not, replace token with `null` and it will rely on your Studio auth\n    token: preview ? token : null,\n    themePreference,\n    ENV: {\n      SANITY_PROJECT_ID: process.env.SANITY_PROJECT_ID,\n      SANITY_DATASET: process.env.SANITY_DATASET,\n      SANITY_API_VERSION: process.env.SANITY_API_VERSION,\n    },\n  })\n}\n\nexport default function App() {\n  const { ENV, themePreference, home, preview } = useLoaderData<typeof loader>()\n\n  const { pathname } = useLocation()\n  const isStudioRoute = pathname.startsWith('/studio')\n  const bodyClassNames = getBodyClassNames(themePreference)\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <link rel=\"icon\" />\n        <Links />\n        {isStudioRoute && typeof document === 'undefined' ? '__STYLES__' : null}\n      </head>\n      <body className={bodyClassNames}>\n        {isStudioRoute ? (\n          <Outlet />\n        ) : (\n          <>\n            <Header siteTitle={home?.siteTitle} />\n\n            <div className=\"container mx-auto p-4 lg:p-12\">\n              <Outlet />\n            </div>\n            <Footer />\n          </>\n        )}\n        {preview ? <ExitPreview /> : null}\n        <ScrollRestoration />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(ENV)}`,\n          }}\n        />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "import React from 'react'\n\nexport function ExitPreview() {\n  return (\n    <div className=\"pointer-events-none fixed inset-0 flex h-screen w-screen items-end justify-center\">\n      <form\n        className=\"pointer-events-auto\"\n        action=\"/resource/preview\"\n        method=\"POST\"\n      >\n        <button className=\"bg-black p-4 font-bold text-white\" type=\"submit\">\n          Exit Preview Mode\n        </button>\n      </form>\n    </div>\n  )\n}\n", "import type { SerializeFrom } from '@remix-run/node'\nimport { Link, useRouteLoaderData } from '@remix-run/react'\n\nimport { PreviewWrapper } from '~/components/PreviewWrapper'\nimport type { loader as rootLoader } from '~/root'\n\ntype LogoProps = {\n  siteTitle?: string | null\n}\n\nexport function Logo(props: LogoProps) {\n  const { query: homeQuery, params: homeParams } = useRouteLoaderData(\n    `root`\n  ) as SerializeFrom<typeof rootLoader>\n\n  const { siteTitle } = props\n\n  if (siteTitle && typeof document !== `undefined`) {\n\n  }\n\n  return (\n    <p className=\" font-bold tracking-tighter lg:text-2xl  \">\n      <PreviewWrapper\n        data={{ siteTitle }}\n        render={({ siteTitle }) => (\n          <Link to=\"/\">{siteTitle ?? `Vahan.Martirosyan`}</Link>\n        )}\n        query={homeQuery}\n        params={homeParams}\n      />\n    </p>\n  )\n}\n", "import type {Params} from '@sanity/preview-kit'\nimport {definePreview, PreviewSuspense} from '@sanity/preview-kit'\nimport type {ReactNode} from 'react'\nimport {isValidElement} from 'react'\n\nimport {Loading} from '~/components/Loading'\nimport {useRootLoaderData} from '~/lib/useRootLoaderData'\nimport {projectDetails} from '~/sanity/projectDetails'\n\nconst {projectId, dataset} = projectDetails()\nconst usePreview = definePreview({projectId, dataset})\n\n// T default to any\ntype PreviewWrapperProps<T> = {\n  data: T\n  render: (data: T) => ReactNode\n  query: string | null\n  params: Params | null\n  fallback?: ReactNode\n}\n\n// Suspense boundary prevents usePreview from running on the server\n// Component just renders children if preview mode is not enabled\nexport function PreviewWrapper<T>(props: PreviewWrapperProps<T>) {\n  const {\n    // Given this data OR if preview is active, draft data\n    data,\n    // Render this component using the data\n    render,\n    // If preview mode is active, listen to this query\n    query = null,\n    // With these params\n    params = {},\n    // And fallback to this while loading\n    fallback = <Loading />,\n  } = props\n  const {preview, token} = useRootLoaderData()\n\n  if (!preview || !query) {\n    const Component = render(data)\n\n    return Component && isValidElement(Component) ? Component : null\n  }\n\n  return (\n    <PreviewSuspense fallback={fallback}>\n      <PreviewSuspended<typeof data>\n        query={query}\n        render={render}\n        params={params ?? {}}\n        token={token}\n      />\n    </PreviewSuspense>\n  )\n}\n\ntype PreviewSuspendedProps<T = any> = {\n  render: (previewData: T) => ReactNode\n  query: string\n  params: Params\n  token: string | null\n}\n\n// Browser-only preview component\nfunction PreviewSuspended<T = any>(props: PreviewSuspendedProps<T>) {\n  const {query, params = {}, token = null, render} = props\n  // A `null` token with rely on your Studio's auth in the same browser session\n  const previewData = usePreview(token, query, params)\n  const Component = render(previewData)\n\n  return Component && isValidElement(Component) ? Component : null\n}\n", "export function Loading() {\n  return (\n    <div className=\"animate-pulse border border-dashed border-red-500 bg-red-50 p-8 text-center\">\n      Loading preview...\n    </div>\n  )\n}\n", "import type {SerializeFrom} from '@remix-run/node'\nimport {useRouteLoaderData} from '@remix-run/react'\n\nimport type {loader as rootLoader} from '~/root'\n\nexport function useRootLoaderData() {\n  const data = useRouteLoaderData(`root`) as SerializeFrom<typeof rootLoader>\n\n  return data\n}\n", "/* eslint-disable prettier/prettier */\ndeclare global {\n  interface Window {\n    ENV: {\n      SANITY_PROJECT_ID: string\n      SANITY_DATASET: string\n      SANITY_API_VERSION: string\n    }\n  }\n}\n\ntype ProjectDetails = {\n  projectId: string\n  dataset: string\n  apiVersion: string\n}\n\nexport const projectDetails = (): ProjectDetails => {\n  const { SANITY_PROJECT_ID, SANITY_DATASET, SANITY_API_VERSION } =\n    typeof document === 'undefined' ? process.env : window.ENV\n\n  return {\n    projectId: SANITY_PROJECT_ID ?? `7i6pmun4`,\n    dataset: SANITY_DATASET ?? `production `,\n    apiVersion: SANITY_API_VERSION ?? `2023-05-11`,\n  }\n}\n", "/* eslint-disable prettier/prettier */\nimport { Logo } from '~/components/Logo'\n\nexport function Footer() {\n  return (\n    <header className=\"border-t border-gray-100 transition-colors duration-200 ease-in-out dark:border-gray-900\">\n      <div className=\"container mx-auto flex items-center justify-between p-4 lg:px-12\">\n        <Logo />\n      </div>\n    </header>\n  )\n}\n", "import {useFetcher, useLoaderData} from '@remix-run/react'\nimport {Moon, Sun} from 'lucide-react'\n\nexport function ThemeToggle() {\n  const cookieToggle = useFetcher()\n  const {themePreference} = useLoaderData()\n\n  const isDarkMode = themePreference === `dark`\n\n  return (\n    <cookieToggle.Form method=\"post\" action=\"/resource/toggle-theme\">\n      <button type=\"submit\" disabled={cookieToggle.state === 'submitting'}>\n        {isDarkMode ? (\n          <Sun className=\"h-auto w-4\" />\n        ) : (\n          <Moon className=\"h-auto w-4\" />\n        )}\n        <div className=\"sr-only select-none\">\n          {isDarkMode ? `Light` : `Dark`} Mode\n        </div>\n      </button>\n    </cookieToggle.Form>\n  )\n}\n", "/* eslint-disable prettier/prettier */\nimport { Logo } from '~/components/Logo'\nimport { ThemeToggle } from '~/components/ThemeToggle'\n//import { SearchBar } from '~/components/SearchBar'\n\ntype HeaderProps = {\n  siteTitle?: string | null\n}\n\nexport function Header(props: HeaderProps) {\n\n\n  return (\n    <header className=\"border-b border-gray-100 transition-colors duration-200 ease-in-out dark:border-gray-900\">\n      <div className=\"container mx-auto flex items-center justify-between p-4 lg:px-12 sticky z-auto\">\n\n        <Logo siteTitle={props.siteTitle} />\n        <ThemeToggle />\n      </div>\n    </header>\n\n  )\n}\n", "import {createCookie} from '@remix-run/node'\n\nexport const themePreferenceCookie = createCookie(`themePreference`, {\n  path: '/',\n})\n", "export function getBodyClassNames(themePreference?: string): string {\n  // Use browser default if cookie is not set\n  const isDarkMode =\n    !themePreference && typeof document !== 'undefined'\n      ? window.matchMedia('(prefers-color-scheme: dark)').matches\n      : themePreference === `dark`\n  return [\n    `transition-colors duration-1000 ease-in-out min-h-screen`,\n    isDarkMode ? `dark bg-black text-white` : `bg-white text-black`,\n  ]\n    .join(' ')\n    .trim()\n}\n", "// https://remix.run/docs/en/v1/api/remix#sessions\nimport {createCookieSessionStorage} from '@remix-run/node'\n\nconst {getSession, commitSession, destroySession} = createCookieSessionStorage({\n  cookie: {\n    name: '__session',\n    httpOnly: true,\n    maxAge: 60,\n    path: '/',\n    sameSite: 'lax',\n    secrets: [String(process.env.SANITY_PREVIEW_SECRET)],\n    secure: true,\n  },\n})\n\nexport {commitSession, destroySession, getSession}\n", "import {getSession} from '~/sessions'\n\nexport async function getPreviewToken(request: Request) {\n  const session = await getSession(request.headers.get('Cookie'))\n  const token = session.get('token')\n\n  return {\n    preview: !!token,\n    token: token ? String(token) : null,\n  }\n}\n", "import {createClient} from '@sanity/client'\n\nimport {projectDetails} from '~/sanity/projectDetails'\n\nexport const client = createClient({\n  ...projectDetails(),\n  useCdn: true,\n})\n\nexport const previewClient = createClient({\n  ...projectDetails(),\n  useCdn: false,\n  token: process.env.SANITY_READ_TOKEN,\n})\n\nexport const getClient = (previewMode = false) =>\n  previewMode ? previewClient : client\n\nexport const writeClient = createClient({\n  ...projectDetails(),\n  useCdn: false,\n  token: process.env.SANITY_WRITE_TOKEN,\n})\n", "import { z } from 'zod'\n\nexport const homeZ = z.object({\n  title: z.string().nullable(),\n  siteTitle: z.string().nullable(),\n  subTitle: z.string().nullable(),\n})\n\nexport type HomeDocument = z.infer<typeof homeZ>\n", "import type {ActionFunction, LoaderFunction} from '@remix-run/node'\nimport {json, redirect} from '@remix-run/node'\n\nimport {themePreferenceCookie} from '~/cookies'\n\nexport const action: ActionFunction = async ({request}) => {\n  const cookieHeader = request.headers.get('Cookie')\n  const cookie = (await themePreferenceCookie.parse(cookieHeader)) || {}\n  const themePreference = cookie.themePreference === `dark` ? `light` : `dark`\n\n  return json(\n    {themePreference},\n    {\n      headers: {\n        'Set-Cookie': await themePreferenceCookie.serialize({\n          themePreference,\n        }),\n      },\n    }\n  )\n}\n\nexport const loader: LoaderFunction = () => redirect('/', {status: 404})\n", "import type {ActionFunction, LoaderArgs} from '@remix-run/node'\nimport {json, redirect} from '@remix-run/node'\nimport groq from 'groq'\n\nimport {previewClient} from '~/sanity/client'\nimport {getSecret, SECRET_ID} from '~/sanity/structure/getSecret'\nimport {commitSession, destroySession, getSession} from '~/sessions'\n\n// A `POST` request to this route will exit preview mode\nexport const action: ActionFunction = async ({request}) => {\n  if (request.method !== 'POST') {\n    return json({message: 'Method not allowed'}, 405)\n  }\n\n  const session = await getSession(request.headers.get('Cookie'))\n\n  return redirect('/', {\n    headers: {\n      'Set-Cookie': await destroySession(session),\n    },\n  })\n}\n\nconst PREVIEW_TYPES = [`record`, `home`]\n\n// A `GET` request to this route will enter preview mode\n// It will check if the \"token\" document in the dataset\n// Is the same as the one passed in the query string\n// If so, it will write the Viewer Token to the session\nexport const loader = async ({request}: LoaderArgs) => {\n  const {token, projectId} = previewClient.config()\n\n  if (!token) {\n    return new Response(\n      `Setup \"SANITY_READ_TOKEN\" with a token with \"Viewer\" permissions to your environment variables. Create one at https://sanity.io/manage/project/${projectId}/api#tokens`,\n      {status: 401}\n    )\n  }\n\n  const requestUrl = new URL(request.url)\n\n  // Check the URL has a valid type\n  const type = requestUrl.searchParams.get('type')\n\n  if (!type) {\n    return new Response('No document type in preview URL', {status: 401})\n  }\n\n  if (!PREVIEW_TYPES.includes(type)) {\n    return new Response('Invalid document type for preview', {status: 401})\n  }\n\n  // Check the URL has a ?secret param\n  const secret = requestUrl.searchParams.get('secret')\n\n  if (!secret) {\n    return new Response('No secret in URL', {status: 401})\n  }\n\n  // Check the secret is valid\n  const validSecret = await getSecret(previewClient, SECRET_ID, false)\n\n  if (validSecret !== secret) {\n    return new Response('Invalid secret', {status: 401})\n  }\n\n  let validSlug = `/`\n\n  // Records have slugs, home page does not\n  if (type === `record`) {\n    // Check the URL has a valid ?slug param)\n    const slug = requestUrl.searchParams.get('slug')\n\n    if (!slug) {\n      return new Response('No slug in preview URL', {status: 401})\n    }\n\n    // Confirm the passed-in slug actually exists\n    const recordSlug = await previewClient.fetch(\n      groq`*[_type == \"record\" && slug.current == $slug][0].slug.current`,\n      {slug}\n    )\n\n    if (!recordSlug) {\n      return new Response('Invalid slug', {status: 401})\n    }\n\n    validSlug = `/${recordSlug}`\n  }\n\n  // Write viewer token to session so that every route can authenticate by it\n  const session = await getSession(request.headers.get('Cookie'))\n  session.set(`token`, token)\n\n  return redirect(validSlug, {\n    headers: {\n      'Set-Cookie': await commitSession(session),\n    },\n  })\n}\n", "import type {SanityClient} from '@sanity/client'\nimport groq from 'groq'\n\nexport const SECRET_ID = `sanity.preview.secret`\n\n// updated within the hour, if it's older it'll create a new secret or return null\nconst query = (ttl: number) =>\n  groq`*[_id == $id && dateTime(_updatedAt) > dateTime(now()) - ${ttl}][0].secret`\n\nconst tag = 'preview.secret'\n\nexport async function getSecret(\n  client: SanityClient,\n  id: `${string}.${string}`,\n  createIfNotExists?: boolean | (() => string)\n): Promise<string | null> {\n  const secret = await client.fetch<string | null>(\n    // Use a TTL of 1 hour when reading the secret, while using a 30min expiry if `createIfNotExists` is defined to avoid a race condition where\n    // a preview pane could get a Secret and use it just as it expires. Twice the TTL gives a wide margin to ensure that when the secret is read\n    // it's recent enough to be valid no matter if it's used in an iframe URL, or a \"Open Preview\" URL.\n    query(createIfNotExists ? 60 * 30 : 60 * 60),\n    {id}\n  )\n  if (!secret && createIfNotExists) {\n    const newSecret =\n      createIfNotExists === true\n        ? Math.random().toString(36).slice(2)\n        : createIfNotExists()\n    try {\n      const patch = client.patch(id).set({secret: newSecret})\n      await client\n        .transaction()\n        .createIfNotExists({_id: id, _type: id})\n        .patch(patch)\n        .commit({tag})\n      return newSecret\n    } catch (err) {\n      console.error(\n        'Failed to create a new preview secret. Ensure the `client` has a `token` specified that has `write` permissions.',\n        err\n      )\n    }\n  }\n\n  return secret\n}\n", "import type {LoaderArgs} from '@remix-run/node'\n\nimport {generatePngFromDocument} from '~/lib/og.server'\nimport {previewClient} from '~/sanity/client'\n\nexport const OG_IMAGE_WIDTH = 1200\nexport const OG_IMAGE_HEIGHT = 630\n\nexport const loader = async ({request}: LoaderArgs) => {\n  const {origin, searchParams} = new URL(request.url)\n  const id = searchParams.get('id')\n\n  if (!id) {\n    return new Response('Bad request', {status: 400})\n  }\n\n  const doc = await previewClient.fetch(`*[_id == $id][0]{ ..., artist-> }`, {\n    id,\n  })\n\n  // Reject requests for documents that don't exist\n  if (!doc) {\n    return new Response('Bad request', {status: 400})\n  }\n\n  const png = await generatePngFromDocument(doc, origin)\n\n  // Respond with the PNG buffer\n  return new Response(png, {\n    status: 200,\n    headers: {\n      // Tell the browser the response is an image\n      'Content-Type': 'image/png',\n      // Optional caching settings\n      'cache-control':\n        process.env.NODE_ENV === 'development'\n          ? 'no-cache'\n          : 'public, immutable, no-transform, max-age=31536000',\n    },\n  })\n}\n", "import { Resvg } from '@resvg/resvg-js'\nimport type { SanityDocument } from '@sanity/client'\nimport urlBuilder from '@sanity/image-url'\nimport type { SatoriOptions } from 'satori'\nimport satori from 'satori'\n\nimport { OG_IMAGE_HEIGHT, OG_IMAGE_WIDTH } from '~/routes/resource.og'\nimport { projectDetails } from '~/sanity/projectDetails'\n\n// Load the font from the \"public\" directory\nconst fontSans = (baseUrl: string) =>\n  fetch(new URL(`${baseUrl}/fonts/Inter-ExtraBold.otf`)).then((res) =>\n    res.arrayBuffer()\n  )\n\nexport async function generatePngFromDocument(\n  doc: SanityDocument,\n  origin: string\n) {\n  const { title, artist, image } = doc\n\n  // Prepare font data and settings for Satori\n  const fontSansData = await fontSans(origin)\n  const options: SatoriOptions = {\n    width: OG_IMAGE_WIDTH,\n    height: OG_IMAGE_HEIGHT,\n    fonts: [\n      {\n        name: 'Inter',\n        data: fontSansData,\n        style: 'normal',\n      },\n    ],\n  }\n\n  // Create the SVG with satori\n  const svg = await satori(\n    <div\n      style={{\n        width: options.width,\n        height: options.height,\n        background: 'linear-gradient( 135deg, black 10%, #444 100%)',\n        color: 'white',\n        fontFamily: 'Inter',\n        letterSpacing: '-0.05em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        lineHeight: 1,\n      }}\n    >\n      <div\n        style={{\n          width: image?.asset?._ref ? options.width - 500 : options.width,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 50,\n          gap: 25,\n        }}\n      >\n        <div style={{ fontSize: 100 }}>{title}</div>\n        {artist?.title ? (\n          <div style={{ fontSize: 40 }}>{artist.title}</div>\n        ) : null}\n      </div>\n      {image?.asset?._ref ? (\n        <div\n          style={{\n            width: 500,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <img\n            alt=\"\"\n            src={urlBuilder(projectDetails())\n              // @ts-ignore\n              .image(image.asset._ref)\n              .height(800)\n              .width(800)\n              .fit('max')\n              .auto('format')\n              .url()}\n            width=\"500\"\n            height=\"500\"\n          />\n        </div>\n      ) : null}\n    </div>,\n    options\n  )\n\n  // Convert to PNG with resvg\n  const resvg = new Resvg(svg)\n  const pngData = resvg.render()\n  return pngData.asPng()\n}\n", "import type { LinksFunction, V2_MetaFunction } from '@remix-run/node';\nimport { ClientOnly } from 'remix-utils';\nimport { Studio } from 'sanity';\n\nimport studio from '~/styles/studio.css';\n\nimport { config } from '../../sanity.config';\n\nexport const meta: V2_MetaFunction = () => [\n{ title: 'Sanity Studio' },\n{ name: 'robots', content: 'noindex' }];\n\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: studio }];\n};\n\nexport default function StudioPage() {\n  return (\n    <ClientOnly>\n      {() =>\n      <Studio\n      config={config}\n      // To enable guests view-only access to your Studio,\n      // uncomment this line!\n      // unstable_noAuthBoundary\n      />}\n\n    </ClientOnly>);\n\n}", "/* eslint-disable prettier/prettier */\nimport { visionTool } from '@sanity/vision'\nimport { defineConfig } from 'sanity'\nimport { deskTool } from 'sanity/desk'\nimport { vercelDeployTool } from 'sanity-plugin-vercel-deploy'\n\nimport { projectDetails } from '~/sanity/projectDetails'\nimport schema from '~/sanity/schema'\nimport { defaultDocumentNode, structure } from '~/sanity/structure'\n\n\nexport const config = defineConfig({\n  ...projectDetails(),\n  name: 'sanity-remix',\n  title: 'Sanity Remix!',\n  plugins: [deskTool({ structure, defaultDocumentNode }), visionTool(), vercelDeployTool()],\n  basePath: `/studio`,\n  schema: {\n    types: schema,\n  },\n})\n", "import {Users} from 'lucide-react'\nimport {defineField, defineType} from 'sanity'\n\nexport const artistType = defineType({\n  name: 'artist',\n  title: 'Artist',\n  type: 'document',\n  icon: Users,\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n      },\n    }),\n    defineField({\n      name: 'image',\n      type: 'image',\n      options: {hotspot: true},\n    }),\n  ],\n})\n", "import {Tags} from 'lucide-react'\nimport {defineField, defineType} from 'sanity'\n\nexport const genreType = defineType({\n  name: 'genre',\n  title: 'Genre',\n  type: 'document',\n  icon: Tags,\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n      },\n    }),\n  ],\n})\n", "import { Home } from 'lucide-react'\nimport { defineField, defineType } from 'sanity'\n\nexport const homeType = defineType({\n  name: 'home',\n  title: 'Home',\n  type: 'document',\n  icon: Home,\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'siteTitle',\n      type: 'string',\n    }),\n    defineField({\n      name: 'subTitle',\n      type: 'string',\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'title',\n      artist: 'siteTitle',\n    },\n  },\n})\n", "import {ComposeIcon, MenuIcon, ThListIcon} from '@sanity/icons'\nimport {Disc} from 'lucide-react'\nimport {defineField, defineType} from 'sanity'\n\nexport const recordType = defineType({\n  name: 'record',\n  title: 'Record',\n  type: 'document',\n  icon: Disc,\n  fieldsets: [\n    {\n      name: 'rating',\n      title: 'Rating',\n      description: 'These fields are written to from the Remix front end',\n      options: {columns: 2},\n    },\n  ],\n  groups: [\n    {\n      name: 'details',\n      title: 'Details',\n      icon: ThListIcon,\n    },\n    {\n      name: 'editorial',\n      title: 'Editorial',\n      icon: ComposeIcon,\n    },\n    {\n      name: 'tracks',\n      title: 'Tracks',\n      icon: MenuIcon,\n    },\n  ],\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n      group: 'details',\n    }),\n    defineField({\n      name: 'slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n      },\n      group: 'details',\n    }),\n    defineField({\n      name: 'likes',\n      type: 'number',\n      readOnly: true,\n      fieldset: 'rating',\n    }),\n    defineField({\n      name: 'dislikes',\n      type: 'number',\n      readOnly: true,\n      fieldset: 'rating',\n    }),\n    defineField({\n      name: 'artist',\n      type: 'reference',\n      to: [{type: 'artist'}],\n      group: 'details',\n    }),\n    defineField({\n      name: 'genres',\n      type: 'array',\n      of: [{type: 'reference', to: {type: 'genre'}}],\n      group: 'details',\n    }),\n    defineField({\n      name: 'content',\n      type: 'array',\n      of: [{type: 'block'}, {type: 'image'}],\n      group: 'editorial',\n    }),\n    defineField({\n      name: 'image',\n      type: 'image',\n      options: {hotspot: true},\n      group: 'editorial',\n    }),\n    defineField({\n      name: 'tracks',\n      type: 'array',\n      of: [{type: 'track'}],\n      group: 'tracks',\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'title',\n      artist: 'artist.title',\n      media: 'image',\n    },\n    prepare({title, artist, media}) {\n      return {\n        title,\n        subtitle: artist,\n        media,\n      }\n    },\n  },\n})\n", "import {defineField, defineType} from 'sanity'\n\nimport {secondsToMinutes} from '~/lib/secondsToMinutes'\nimport Duration from '~/sanity/components/Duration'\n\nexport const trackType = defineType({\n  name: 'track',\n  title: 'Track',\n  type: 'object',\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'duration',\n      description: 'Time in seconds',\n      type: 'number',\n      components: {\n        input: Duration,\n      },\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'title',\n      duration: 'duration',\n    },\n    prepare({title, duration}) {\n      return {\n        title,\n        subtitle: secondsToMinutes(duration),\n      }\n    },\n  },\n})\n", "export function secondsToMinutes(seconds: number) {\n  return `${Math.floor(seconds / 60)}:${String(seconds % 60).padStart(2, '0')}`\n}\n", "import {Box, Code, Flex} from '@sanity/ui'\nimport React from 'react'\nimport type {NumberInputProps} from 'sanity'\n\nimport {secondsToMinutes} from '~/lib/secondsToMinutes'\n\nexport default function Duration(props: NumberInputProps) {\n  return (\n    <Flex gap={3} align=\"center\">\n      <Box flex={1}>{props.renderDefault(props)}</Box>\n      {props.value ? (\n        <Code size={4}>{secondsToMinutes(props.value)}</Code>\n      ) : null}\n    </Flex>\n  )\n}\n", "import {artistType} from '~/sanity/schema/artist'\nimport {genreType} from '~/sanity/schema/genre'\nimport {homeType} from '~/sanity/schema/home'\nimport {recordType} from '~/sanity/schema/record'\nimport {trackType} from '~/sanity/schema/track'\n\nexport default [artistType, genreType, homeType, recordType, trackType]\n", "import {Disc, Home, Tags, Users} from 'lucide-react'\nimport type {SanityDocument} from 'sanity'\nimport type {DefaultDocumentNodeResolver, StructureResolver} from 'sanity/desk'\nimport Iframe from 'sanity-plugin-iframe-pane'\n\nimport OGPreview from '~/sanity/components/OGPreview'\nimport {projectDetails} from '~/sanity/projectDetails'\nimport type {SanityDocumentWithSlug} from '~/sanity/structure/resolvePreviewUrl'\nimport {resolvePreviewUrl} from '~/sanity/structure/resolvePreviewUrl'\n\nimport {resolveOGUrl} from './resolveOGUrl'\n\nexport const structure: StructureResolver = (S) =>\n  S.list()\n    .id('root')\n    .title('Content')\n    .items([\n      // Singleton, home page curation\n      S.documentListItem()\n        .schemaType('home')\n        .icon(Home)\n        .id('home')\n        .title('Home'),\n      S.divider(),\n      // Document lists\n      S.documentTypeListItem('record').title('Records').icon(Disc),\n      S.documentTypeListItem('artist').title('Artists').icon(Users),\n      S.divider(),\n      S.documentTypeListItem('genre').title('Genres').icon(Tags),\n    ])\n\nexport const defaultDocumentNode: DefaultDocumentNodeResolver = (\n  S,\n  {schemaType, getClient}\n) => {\n  const {apiVersion} = projectDetails()\n  const client = getClient({apiVersion})\n\n  const previewView = S.view\n    .component(Iframe)\n    .options({\n      url: (doc: SanityDocumentWithSlug) => resolvePreviewUrl(doc, client),\n      reload: {button: true},\n    })\n    .title('Preview')\n  const OGPreviewView = S.view\n    .component(OGPreview)\n    .options({\n      url: (doc: SanityDocument) => resolveOGUrl(doc),\n    })\n    .title('OG Preview')\n\n  switch (schemaType) {\n    case `home`:\n      return S.document().views([S.view.form(), previewView])\n    case `record`:\n      return S.document().views([S.view.form(), previewView, OGPreviewView])\n    default:\n      return S.document().views([S.view.form()])\n  }\n}\n", "import {Card, Code, Flex} from '@sanity/ui'\nimport React from 'react'\n\nimport {OG_IMAGE_HEIGHT, OG_IMAGE_WIDTH} from '~/routes/resource.og'\n\nexport default function OGPreview({document, options}: any) {\n  const {displayed} = document\n  const url = React.useMemo(() => options.url(displayed), [displayed, options])\n\n  return (\n    <Flex\n      height=\"fill\"\n      direction=\"column\"\n      align=\"flex-start\"\n      padding={5}\n      gap={5}\n    >\n      <Card shadow={2}>\n        <Flex>\n          <img\n            src={url}\n            alt=\"OG Preview\"\n            width={OG_IMAGE_WIDTH}\n            height={OG_IMAGE_HEIGHT}\n            style={{width: `100%`, height: `auto`}}\n          />\n        </Flex>\n      </Card>\n      <Code size={0}>{url}</Code>\n    </Flex>\n  )\n}\n", "import type {SanityClient, SanityDocument, Slug} from 'sanity'\n\nimport {getSecret, SECRET_ID} from '~/sanity/structure/getSecret'\n\nexport type SanityDocumentWithSlug = SanityDocument & {slug: Slug}\n\nexport async function resolvePreviewUrl(\n  doc: SanityDocumentWithSlug,\n  client: SanityClient\n) {\n  // Studio is a client-side only app so window should be available\n  if (typeof window === 'undefined') {\n    return ''\n  }\n\n  const previewUrl = new URL('/resource/preview', window.origin)\n  previewUrl.searchParams.set('type', doc._type)\n\n  if (doc?.slug?.current) {\n    previewUrl.searchParams.set('slug', doc.slug.current)\n  }\n\n  const secret = await getSecret(client, SECRET_ID, true)\n\n  if (secret) {\n    previewUrl.searchParams.set('secret', secret)\n  }\n\n  return previewUrl.toString()\n}\n", "import type {SanityDocument} from 'sanity'\n\nexport function resolveOGUrl(doc: SanityDocument) {\n  // Studio is a client-side only app so window should be available\n  if (typeof window === 'undefined') {\n    return ''\n  }\n\n  const ogUrl = new URL('/resource/og', window.origin)\n\n  ogUrl.searchParams.set('id', doc._id)\n\n  return ogUrl.toString()\n}\n", "import type {\nLinksFunction,\nLoaderArgs,\nSerializeFrom,\nV2_MetaFunction } from\n'@remix-run/node';\nimport { json } from '@remix-run/node';\nimport type { RouteMatch } from '@remix-run/react';\nimport { useLoaderData } from '@remix-run/react';\nimport groq from 'groq';\n\nimport { PreviewWrapper } from '~/components/PreviewWrapper';\nimport { Records } from '~/components/Records';\nimport { Title } from '~/components/Title';\nimport { deduplicateDrafts } from '~/lib/deduplicateDrafts';\nimport { getPreviewToken } from '~/lib/getPreviewToken';\nimport { useRootLoaderData } from '~/lib/useRootLoaderData';\nimport type { loader as rootLoader } from '~/root';\nimport { getClient } from '~/sanity/client';\nimport tailwind from '~/tailwind.css';\nimport { recordStubsZ } from '~/types/record';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: tailwind }];\n};\n\nexport const meta: V2_MetaFunction = ({ matches }) => {\n  const rootData = (matches.find((match: RouteMatch) => match.id === `root`) as\n  {data: SerializeFrom<typeof rootLoader>;} |\n  undefined);\n\n  const home = rootData ? rootData.data.home : null;\n  const title = [home?.title, home?.subTitle, home?.siteTitle].filter(Boolean).join(' | ');\n\n  return [{ title }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const { preview } = await getPreviewToken(request);\n  const query = groq`*[_type == \"record\"][0...12]|order(title asc){\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current,\n    \"artist\": artist->title,\n    image\n  }`;\n\n  const records = await getClient(preview).\n  fetch(query).\n  then((res) => res ? recordStubsZ.parse(res) : null);\n\n  const recordsDeduped =\n  records?.length && preview ?\n  recordStubsZ.parse(deduplicateDrafts(records)) :\n  records;\n\n  if (!records) {\n    throw new Response('Not found', { status: 404 });\n  }\n\n  return json({\n    records: recordsDeduped,\n    query: preview ? query : null,\n    params: preview ? {} : null\n  });\n};\n\nexport default function Index() {\n  const { records = [], query, params } = useLoaderData<typeof loader>();\n  const { home, query: homeQuery, params: homeParams } = useRootLoaderData();\n\n  return (\n    <div className=\"grid grid-cols-1 gap-6 md:gap-12\">\n      <PreviewWrapper\n      data={home}\n      render={(data) => data?.title ? <Title>{data.title}</Title> : null}\n      query={homeQuery}\n      params={homeParams} />\n\n      <PreviewWrapper\n      data={home}\n      render={(data) => data?.subTitle ? <Title>{data.subTitle}</Title> : null}\n      query={homeQuery}\n      params={homeParams} />\n\n      <PreviewWrapper\n      data={records}\n      render={(data) => <Records records={data ?? []} />}\n      query={query}\n      params={params} />\n\n    </div>);\n\n}", "/* eslint-disable prettier/prettier */\nimport { Link } from '@remix-run/react'\n\n\nimport { RecordCover } from '~/components/RecordCover'\nimport type { RecordStub } from '~/types/record'\n\n\n\ntype RecordsProps = {\n  records: RecordStub[]\n}\n\nexport function Records(props: RecordsProps) {\n\n\n\n  const { records = [] } = props\n\n\n  return records.length > 0 ? (\n    <ul className=\"grid grid-cols-1 gap-6 md:grid-cols-2 md:gap-12 lg:grid-cols-3\">\n      {records.map((record) => (\n        <li key={record._id} className=\"group relative flex flex-col\">\n          <div className=\"relative overflow-hidden transition-all duration-100 ease-in-out group-hover:scale-105 group-hover:opacity-90\">\n            <div className=\"absolute z-0 h-48 w-[200%] translate-x-20 translate-y-20 -rotate-45 dark:bg-gradient-to-b from-black to-transparent opacity-25 mix-blend-overlay transition-transform duration-300 ease-in-out group-hover:translate-x-10 group-hover:translate-y-10 group-hover:opacity-75\" />\n            <RecordCover image={record.image} title={record.title} />\n          </div>\n          <div className=\"flex flex-col text-blue-700\">\n            {record?.slug ? (\n              <Link\n                prefetch=\"intent\"\n                to={record?.slug}\n                className=\"text-base\"\n              >\n\n                {/* Makes this entire block clickable */}\n                <span className=\"absolute inset-0\" />\n              </Link>\n            ) : (\n              <span className=\"pt-4 text-2xl font-bold tracking-tighter\">\n                {record.title}\n              </span>\n            )}\n            {record?.artist ? (\n              <span className=\"bg-black font-bold leading-none tracking-tighter text-white\">\n                {record.artist}\n              </span>\n            ) : null}\n          </div>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <div className=\"prose prose-xl mx-auto bg-green-50 p-4\">\n      <p>No records found, yet!</p>\n      <p>\n        <a href=\"/studio\">Log in to your Sanity Studio</a> and start creating\n        content!\n      </p>\n    </div>\n  )\n}\n", "/* eslint-disable prettier/prettier */\nimport type { SanityImageObjectStub } from '@sanity/asset-utils'\nimport urlBuilder from '@sanity/image-url'\n\n\nimport { projectDetails } from '~/sanity/projectDetails'\n\ntype RecordCoverProps = {\n  title?: string | null\n  content?: string | null\n  image?: SanityImageObjectStub\n}\n\nexport function RecordCover(props: RecordCoverProps) {\n  const { title, image, content } = props\n\n  return (\n\n    <div className=\"aspect-square light:bg-black\">\n      {image ? (\n\n        <div className=\"max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700\">\n          <img\n            className=\"h-auto w-full object-cover shadow-black transition-all duration-200 group-hover:shadow-2xl group-hover:shadow-cyan-200 bg-black\"\n            src={urlBuilder(projectDetails())\n              // @ts-ignore\n              .image(image.asset._ref)\n              .height(800)\n              .width(800)\n              .fit('max')\n              .auto('format')\n              .url()}\n            alt={String(title) ?? ``}\n            loading=\"lazy\" />\n\n\n        </div>\n\n      ) : (\n        <div className=\"flex aspect-square w-full items-center justify-center bg-gray-100 text-gray-500\">\n          {title ?? `Missing Record art`}\n        </div>\n      )}\n    </div>\n  )\n}\n", "/* eslint-disable prettier/prettier */\n\nimport type { PropsWithChildren } from \"react\";\n\n\n\nexport function Title(props: PropsWithChildren) {\n  return props.children ? (\n\n    <h1 className=\"text-bold max-w-4xl text-2xl font-bold tracking-tighter md:text-4xl lg:text-5xl xl:text-7xl text-center sm:text-left\">\n      {props.children}\n    </h1>\n\n  ) : null\n}\n", "import type {SanityDocumentLike} from 'sanity'\n\nexport function deduplicateDrafts(data: SanityDocumentLike[]) {\n  const draftsMap = new Map()\n  const orderArray = []\n\n  // Create the map with draft objects and preserve order\n  for (const currentObject of data) {\n    const id = currentObject._id\n    if (id.startsWith('drafts.')) {\n      const draftId = id.substring(7)\n      if (!draftsMap.has(draftId) && !draftsMap.has(id)) {\n        draftsMap.set(draftId, currentObject)\n        orderArray.push(draftId)\n      }\n    } else {\n      if (!draftsMap.has(id)) {\n        draftsMap.set(id, currentObject)\n        orderArray.push(id)\n      }\n    }\n  }\n\n  // Generate the reduced data array while preserving the original order\n  const reducedData = orderArray.map((id) => draftsMap.get(id))\n\n  return reducedData\n}\n", "import { z } from 'zod'\n\n// This is a Zod schema\n// https://zod.dev/\n\n// It will validate data at run time\n// And generate Types during development\n// Giving you both the flexibility of writing GROQ queries\n// And the safety of Typescript\n// without being limited to the shape of your Sanity Schema\nexport const recordZ = z.object({\n  _id: z.string(),\n  title: z.string().nullable(),\n  slug: z.string().nullable(),\n  likes: z.number(),\n  dislikes: z.number(),\n  artist: z.string().nullable(),\n  tracks: z\n    .array(\n      z.object({\n        _key: z.string(),\n        title: z.string().nullable(),\n        duration: z.number().nullable(),\n      })\n    )\n    .nullable(),\n  // ...being a touch lazy here, these could be more strongly typed\n  image: z.any().nullable(),\n  content: z.array(z.any()).nullable(),\n})\n\nexport type RecordDocument = z.infer<typeof recordZ>\n\nexport const recordsZ = z.array(recordZ)\n\nexport const recordStubZ = z.object({\n  _id: z.string(),\n  _type: z.string(),\n  title: z.string().nullable(),\n  slug: z.string().nullable(),\n  artist: z.string().nullable(),\n  image: z.any().nullable(),\n})\n\nexport const recordStubsZ = z.array(recordStubZ)\n\nexport type RecordStub = z.infer<typeof recordStubZ>\n", "import type {\nActionFunction,\nLinksFunction,\nLoaderArgs,\nSerializeFrom,\nV2_MetaFunction } from\n'@remix-run/node';\nimport { json } from '@remix-run/node';\nimport type { RouteMatch } from '@remix-run/react';\nimport { useRouteLoaderData } from '@remix-run/react';\nimport {\nisRouteErrorResponse,\nuseLoaderData,\nuseRouteError } from\n'@remix-run/react';\nimport groq from 'groq';\n\nimport { PreviewWrapper } from '~/components/PreviewWrapper';\nimport { Record } from '~/components/Record';\nimport { getPreviewToken } from '~/lib/getPreviewToken';\nimport type { loader as rootLoader } from '~/root';\nimport { OG_IMAGE_HEIGHT, OG_IMAGE_WIDTH } from '~/routes/resource.og';\nimport { client, writeClient } from '~/sanity/client';\nimport styles from '~/styles/app.css';\nimport { recordZ } from '~/types/record';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }];\n};\n\nexport const meta: V2_MetaFunction = ({ data, matches }) => {\n  const rootData = (matches.find((match: RouteMatch) => match.id === `root`) as\n  {data: SerializeFrom<typeof rootLoader>;} |\n  undefined);\n  const home = rootData ? rootData.data.home : null;\n  const title = [data?.record?.title, home?.siteTitle, home?.subTitle].\n  filter(Boolean).\n  join(' | ');\n  const { ogImageUrl } = data;\n\n  return [\n  { title },\n  { property: 'twitter:card', content: 'summary_large_image' },\n  { property: 'twitter:title', content: title },\n  { property: 'og:title', content: title },\n  { property: 'og:image:width', content: String(OG_IMAGE_WIDTH) },\n  { property: 'og:image:height', content: String(OG_IMAGE_HEIGHT) },\n  { property: 'og:image', content: ogImageUrl }];\n\n};\n\n// Perform a `like` or `dislike` mutation on a `record` document\nexport const action: ActionFunction = async ({ request }) => {\n  if (request.method !== 'POST') {\n    throw new Response('Method not allowed', { status: 405 });\n  }\n\n  const { token, projectId } = writeClient.config();\n\n  if (!token) {\n    throw new Response(\n    `Setup \"SANITY_WRITE_TOKEN\" with a token with \"Editor\" permissions to your environment variables. Create one at https://sanity.io/manage/project/${projectId}/api#tokens`,\n    { status: 401 }\n    );\n  }\n\n  const body = await request.formData();\n  const id = String(body.get('id'));\n  const action = String(body.get('action'));\n\n  if (id) {\n    switch (action) {\n      case 'LIKE':\n        return await writeClient.\n        patch(id).\n        setIfMissing({ likes: 0 }).\n        inc({ likes: 1 }).\n        commit().\n        then(({ likes, dislikes }) => ({\n          likes: likes ?? 0,\n          dislikes: dislikes ?? 0\n        }));\n      case 'DISLIKE':\n        return await writeClient.\n        patch(id).\n        setIfMissing({ dislikes: 0 }).\n        inc({ dislikes: 1 }).\n        commit().\n        then(({ likes, dislikes }) => ({\n          likes: likes ?? 0,\n          dislikes: dislikes ?? 0\n        }));\n      default:\n        return json({ message: 'Invalid action' }, 400);\n    }\n  }\n\n  return json({ message: 'Bad request' }, 400);\n};\n\n// Load the `record` document with this slug\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const { preview } = await getPreviewToken(request);\n\n  const query = groq`*[_type == \"record\" && slug.current == $slug][0]{\n    _id,\n    title,\n    // GROQ can re-shape data in the request!\n    \"slug\": slug.current,\n    \"artist\": artist->title,\n    // coalesce() returns the first value that is not null\n    // so we can ensure we have at least a zero\n    \"likes\": coalesce(likes, 0),\n    \"dislikes\": coalesce(dislikes, 0),\n    // for simplicity in this demo these are typed as \"any\"\n    // we can make them type-safe with a little more work\n    // https://www.simeongriggs.dev/type-safe-groq-queries-for-sanity-data-with-zod\n    image,\n    content,\n    // this is how we extract values from arrays\n    tracks[]{\n      _key,\n      title,\n      duration\n    }\n  }`;\n\n  const record = await client\n  // Params from the loader uses the filename\n  // $slug.tsx has the params { slug: 'hello-world' }\n  .fetch(query, params)\n  // Parsed with Zod to validate data at runtime\n  // and generate a Typescript type\n  .then((res) => res ? recordZ.parse(res) : null);\n\n  if (!record) {\n    throw new Response('Not found', { status: 404 });\n  }\n\n  // Create social share image url\n  const { origin } = new URL(request.url);\n  const ogImageUrl = `${origin}/resource/og?id=${record._id}`;\n\n  return json({\n    record,\n    ogImageUrl,\n    query: preview ? query : null,\n    params: preview ? params : null\n  });\n};\n\nexport default function RecordPage() {\n  const { record, query, params } = useLoaderData<typeof loader>();\n\n  return (\n    <PreviewWrapper\n    data={record}\n    render={Record}\n    query={query}\n    params={params} />);\n\n\n}", "import { useFetcher, useLocation } from '@remix-run/react'\nimport { ThumbsDown, ThumbsUp } from 'lucide-react'\n\ntype LikeDislikeProps = {\n  id: string\n  likes: number\n  dislikes: number\n}\n\nexport function LikeDislike(props: LikeDislikeProps) {\n  const { id } = props\n  const fetcher = useFetcher()\n  const location = useLocation()\n\n  // Use fresh data returned from the ActionFunction, if a mutation has just finished\n  const isDone = fetcher.state === 'idle' && fetcher.data !== null\n  const isWorking =\n    fetcher.state === 'loading' || fetcher.state === 'submitting'\n\n  const likes =\n    isDone && Number(fetcher?.data?.likes) ? fetcher.data.likes : props?.likes\n  const optimisticLikes =\n    fetcher.formData && fetcher.formData.get('action') === 'LIKE'\n      ? likes + 1\n      : likes\n  const displayLikes = optimisticLikes || likes\n\n  const dislikes =\n    isDone && Number(fetcher?.data?.dislikes)\n      ? fetcher.data.dislikes\n      : props?.dislikes\n  const optimisticDislikes =\n    fetcher.formData && fetcher.formData.get('action') === 'DISLIKE'\n      ? dislikes + 1\n      : dislikes\n  const displayDislikes = optimisticDislikes || dislikes\n\n  return (\n    <fetcher.Form\n      action={location.pathname}\n      className=\"flex items-center justify-center gap-4 bg-black text-white\"\n      method=\"post\"\n    >\n      <input name=\"id\" type=\"hidden\" value={id} />\n      <button\n        name=\"action\"\n        type=\"submit\"\n        value=\"LIKE\"\n        disabled={isWorking}\n        className=\"flex items-center gap-2 bg-black da p-4 transition-all duration-100 ease-in-out hover:bg-cyan-400 hover:text-black disabled:opacity-50\"\n        title=\"Like\"\n      >\n        <span className=\"text-xs font-bold\">{displayLikes}</span>\n        <ThumbsUp />\n        <span className=\"sr-only\">Like</span>\n      </button>\n      <button\n        name=\"action\"\n        type=\"submit\"\n        value=\"DISLIKE\"\n        disabled={isWorking}\n        className=\"flex items-center gap-2 bg-black p-4 transition-all duration-100 ease-in-out hover:bg-cyan-400 hover:text-black disabled:opacity-50\"\n        title=\"Dislike\"\n      >\n        <ThumbsDown />\n        <span className=\"text-xs font-bold\">{displayDislikes}</span>\n        <span className=\"sr-only\">Dislike</span>\n      </button>\n    </fetcher.Form>\n  )\n}\n", "import {PortableText} from '@portabletext/react'\n\nimport {SanityImage} from '~/components/SanityImage'\n\ntype ContentProps = {\n  value: any[]\n}\n\nconst components = {\n  types: {\n    image: SanityImage,\n  },\n}\n\nexport function SanityContent(props: ContentProps) {\n  const {value} = props\n\n  return (\n    <div className=\"prose font-serif dark:prose-invert md:prose-2xl prose-a:text-cyan-600 dark:prose-a:text-cyan-200\">\n      <PortableText value={value} components={components} />\n    </div>\n  )\n}\n", "/* eslint-disable prettier/prettier */\nimport type { PortableTextComponentProps } from '@portabletext/react'\nimport type { SanityImageSource } from '@sanity/asset-utils'\nimport { getImageDimensions } from '@sanity/asset-utils'\nimport urlBuilder from '@sanity/image-url'\n\n\nimport { projectDetails } from '~/sanity/projectDetails'\n\ntype SanityImageAssetWithAlt = SanityImageSource & { alt?: string }\n\nexport function SanityImage(\n  props: PortableTextComponentProps<SanityImageAssetWithAlt>\n) {\n  const { value, isInline } = props\n  const { width, height } = getImageDimensions(value)\n\n  return (\n    <img\n      className=\"not-prose h-auto w-full \"\n      src={urlBuilder(projectDetails())\n        .image(value)\n        .width(isInline ? 100 : 800)\n        .fit('max')\n        .auto('format')\n        .url()}\n      alt={value.alt || ''}\n      loading=\"lazy\"\n      style={{\n        // Display alongside text if image appears inside a block text span\n        display: isInline ? 'inline-block' : 'block',\n\n        // Avoid jumping around with aspect-ratio CSS property\n        aspectRatio: width / height,\n      }}\n    />\n  )\n}\n", "/* eslint-disable prettier/prettier */\nimport { LikeDislike } from '~/components/LikeDislike'\nimport { RecordCover } from '~/components/RecordCover'\nimport { SanityContent } from '~/components/SanityContent'\nimport { Title } from '~/components/Title'\nimport { secondsToMinutes } from '~/lib/secondsToMinutes'\nimport type { RecordDocument } from '~/types/record'\n\nexport function Record(props: RecordDocument) {\n  const { _id, title, artist, content, image, tracks, likes, dislikes } = props\n\n  return (\n    <article className=\"flex flex-col items-start gap-4 lg:flex-row lg:gap-12\">\n      <div className=\"grid-gap-4 mx-auto grid max-w-[70vw] grid-cols-1 \">\n        <RecordCover image={image} title={title} />\n        <LikeDislike id={_id} likes={likes} dislikes={dislikes} />\n      </div>\n      <div className=\"flex flex-shrink-0 flex-col gap-4 md:gap-6 lg:w-2/3\">\n        <header>\n          {title ? <Title>{title}</Title> : null}\n          {artist ? (\n            <h2 className=\"bg-black text-2xl font-bold tracking-tighter text-yellow-300\">\n              {artist}\n            </h2>\n          ) : null}\n        </header>\n        {content && content?.length > 0 ? (\n          <SanityContent value={content} />\n        ) : null}\n        {tracks && tracks?.length > 0 ? (\n          <>\n            <ul className=\"grid grid-cols-1 divide-y divide-gray-100 dark:divide-gray-900\">\n              <li className=\"py-3 text-2xl font-bold tracking-tighter\">\n                {tracks?.length === 1 ? `1 Track` : `${tracks?.length} Tracks`}\n              </li>\n              {tracks.map((track) => (\n                <li\n                  key={track._key}\n                  className=\"flex items-center justify-between py-3\"\n                >\n                  <span className=\"text-lg\">{track.title}</span>\n                  {track.duration ? (\n                    <span className=\"text-sm font-bold\">\n                      {secondsToMinutes(track.duration)}\n                    </span>\n                  ) : null}\n                </li>\n              ))}\n            </ul>\n          </>\n        ) : null}\n      </div>\n    </article>\n  )\n}\n", "export default {'version':'a699693c','entry':{'module':'/build/entry.client-E2ID7OBC.js','imports':['/build/_shared/chunk-RZPD7QDG.js','/build/_shared/chunk-SJOFFNJU.js','/build/_shared/chunk-V4O2SHX5.js','/build/_shared/chunk-5HQW4SWS.js','/build/_shared/chunk-I4IZRGLP.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-4XNXCT7C.js','imports':['/build/_shared/chunk-NFNY43FL.js','/build/_shared/chunk-SAEFTMCT.js','/build/_shared/chunk-M2PEN2UP.js','/build/_shared/chunk-6TKMBU2E.js','/build/_shared/chunk-EZIV2XCM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$slug':{'id':'routes/$slug','parentId':'root','path':':slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$slug-3L7UPBAQ.js','imports':['/build/_shared/chunk-TGHXYJU4.js','/build/_shared/chunk-DWGBMFOF.js','/build/_shared/chunk-CEFE6TW2.js','/build/_shared/chunk-E7KB5GSM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-OYEVIQOW.js','imports':['/build/_shared/chunk-CEFE6TW2.js','/build/_shared/chunk-E7KB5GSM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resource.og':{'id':'routes/resource.og','parentId':'root','path':'resource/og','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resource.og-T73I3IUQ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resource.preview':{'id':'routes/resource.preview','parentId':'root','path':'resource/preview','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resource.preview-PDYO4H4J.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resource.toggle-theme':{'id':'routes/resource.toggle-theme','parentId':'root','path':'resource/toggle-theme','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resource.toggle-theme-LCWYGFJH.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/studio.$':{'id':'routes/studio.$','parentId':'root','path':'studio/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/studio.$-KFSKUJN2.js','imports':['/build/_shared/chunk-JGVC7VBJ.js','/build/_shared/chunk-U65C7V7N.js','/build/_shared/chunk-EX55ICKE.js','/build/_shared/chunk-TGHXYJU4.js','/build/_shared/chunk-DWGBMFOF.js','/build/_shared/chunk-E7KB5GSM.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-A699693C.js'};", "\nimport * as entryServer from \"/Users/varhanmartirosyan/Desktop/sanity_remix/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/resource.toggle-theme.ts\";\nimport * as route2 from \"./routes/resource.preview.ts\";\nimport * as route3 from \"./routes/resource.og.tsx\";\nimport * as route4 from \"./routes/studio.$.tsx\";\nimport * as route5 from \"./routes/_index.tsx\";\nimport * as route6 from \"./routes/$slug.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/resource.toggle-theme\": {\n      id: \"routes/resource.toggle-theme\",\n      parentId: \"root\",\n      path: \"resource/toggle-theme\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/resource.preview\": {\n      id: \"routes/resource.preview\",\n      parentId: \"root\",\n      path: \"resource/preview\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/resource.og\": {\n      id: \"routes/resource.og\",\n      parentId: \"root\",\n      path: \"resource/og\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/studio.$\": {\n      id: \"routes/studio.$\",\n      parentId: \"root\",\n      path: \"studio/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/$slug\": {\n      id: \"routes/$slug\",\n      parentId: \"root\",\n      path: \":slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    }\n  };"],
  "mappings": "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",
  "names": ["import_node", "import_react", "import_zod", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "query", "import_jsx_dev_runtime", "siteTitle", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_node", "import_node", "import_jsx_dev_runtime", "query", "groq", "loader", "import_node", "loader", "action", "loader", "import_node", "import_groq", "import_groq", "groq", "client", "action", "loader", "projectId", "groq", "loader", "import_jsx_dev_runtime", "satori", "urlBuilder", "loader", "links", "import_sanity", "import_sanity", "import_lucide_react", "import_lucide_react", "import_sanity", "import_lucide_react", "import_sanity", "import_lucide_react", "import_sanity", "import_sanity", "import_jsx_dev_runtime", "import_lucide_react", "import_ui", "import_react", "import_jsx_dev_runtime", "document", "React", "client", "getClient", "client", "Iframe", "import_jsx_dev_runtime", "links", "links", "loader", "meta", "import_node", "import_react", "import_groq", "import_react", "import_image_url", "import_jsx_dev_runtime", "urlBuilder", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_zod", "import_jsx_dev_runtime", "links", "meta", "loader", "query", "groq", "action", "links", "loader", "meta", "import_node", "import_react", "import_groq", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "import_react", "import_image_url", "import_jsx_dev_runtime", "urlBuilder", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "links", "meta", "action", "projectId", "loader", "query", "groq"]
}
